# telegram_manager_bot/handlers/orders.py
from aiogram import Router, types
from aiogram.filters import Command
from telegram_manager_bot.keyboards import get_orders_list_keyboard
from telegram_manager_bot.utils import get_all_orders_async, get_order_details_async, update_order_status_async

router = Router()

@router.message(Command("orders"))
async def cmd_orders(message: types.Message):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∑–∞–∫–∞–∑–æ–≤."""
    print(f"[DEBUG orders.py] /orders –≤—ã–∑–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {message.from_user.id}")
    orders = await get_all_orders_async()
    if orders:
        keyboard = get_orders_list_keyboard(orders)
        await message.answer("–°–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤:", reply_markup=keyboard)
    else:
        await message.answer("–ó–∞–∫–∞–∑–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç.")

@router.callback_query(lambda c: c.data.startswith('m_view_order_'))
async def callback_view_order(callback_query: types.CallbackQuery):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞."""
    order_id = int(callback_query.data.split('_')[-1])
    print(f"[DEBUG orders.py] –ü—Ä–æ—Å–º–æ—Ç—Ä –∑–∞–∫–∞–∑–∞ #{order_id} –∑–∞–ø—Ä–æ—à–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {callback_query.from_user.id}")
    details = await get_order_details_async(order_id)
    if details:
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç
        order_info = (
            f"–ó–∞–∫–∞–∑ #{details['id']}\n"
            f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {details['user']}\n"
            f"–°—Ç–∞—Ç—É—Å: {details['status']}\n"
            f"–°—Ç–∞—Ç—É—Å –æ–ø–ª–∞—Ç—ã: {details['payment_status']}\n"
            f"–î–∞—Ç–∞ –¥–æ—Å—Ç–∞–≤–∫–∏: {details['delivery_date']}\n"
            f"–ê–¥—Ä–µ—Å: {details['delivery_address']}\n"
            f"–¢–µ–ª–µ—Ñ–æ–Ω: {details['delivery_phone']}\n"
            f"–ò—Ç–æ–≥–æ: {details['total_price']} ‚ÇΩ\n"
            f"–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {details['comment'] or '–ù–µ—Ç'}\n"
            f"–¢–æ–≤–∞—Ä—ã:\n" + "\n".join(details['items_list'])
        )
        # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        from telegram_manager_bot.keyboards import get_order_status_keyboard
        keyboard = get_order_status_keyboard(details['status'].lower()) # –ê–¥–∞–ø—Ç–∏—Ä—É–π—Ç–µ –∫–ª—é—á —Å—Ç–∞—Ç—É—Å–∞
        await callback_query.message.edit_text(text=order_info, reply_markup=keyboard)
    else:
        await callback_query.answer("–ó–∞–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω.")
    await callback_query.answer()

@router.callback_query(lambda c: c.data.startswith('m_status_'))
async def callback_change_status(callback_query: types.CallbackQuery):
    """–ò–∑–º–µ–Ω—è–µ—Ç —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞."""
    data_parts = callback_query.data.split('_')
    if len(data_parts) < 3:
        await callback_query.answer("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö.")
        return

    new_status_key = data_parts[2]
    # –ü–æ–ª—É—á–∞–µ–º ID –∑–∞–∫–∞–∑–∞ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è (–µ—Å–ª–∏ –æ–Ω–æ —Å–æ–¥–µ—Ä–∂–∏—Ç ID, –∏–Ω–∞—á–µ –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –≤ callback_data)
    # –ü—Ä–µ–¥–ø–æ–ª–æ–∂–∏–º, ID –∑–∞–∫–∞–∑–∞ –º–æ–∂–Ω–æ –∏–∑–≤–ª–µ—á—å –∏–∑ —Ç–µ–∫—Å—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–ª–∏ —Ö—Ä–∞–Ω–∏—Ç—å –≤ FSM
    # –ü–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ–π —Å–ø–æ—Å–æ–± - –ø—Ä–µ–¥–ø–æ–ª–æ–∂–∏–º, —á—Ç–æ ID –∑–∞–∫–∞–∑–∞ –≤—Å–µ–≥–¥–∞ –≤ —Ç–µ–∫—Å—Ç–µ –ø–µ—Ä–µ–¥ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    message_text = callback_query.message.text
    # –ü—Ä–æ—Å—Ç–æ–π –ø–∞—Ä—Å–∏–Ω–≥ ID –∏–∑ —Ç–µ–∫—Å—Ç–∞ "–ó–∞–∫–∞–∑ #123"
    import re
    match = re.search(r'–ó–∞–∫–∞–∑ #(\d+)', message_text)
    if not match:
         # –ü–æ–ø—Ä–æ–±—É–µ–º –∏–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è "üö® –ù–û–í–´–ô –ó–ê–ö–ê–ó #123"
         match = re.search(r'–ù–û–í–´–ô –ó–ê–ö–ê–ó #(\d+)', message_text)
    if not match:
         # –ü–æ–ø—Ä–æ–±—É–µ–º –∏–∑ "üîÑ –°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ #123 –∏–∑–º–µ–Ω—ë–Ω!"
         match = re.search(r'—Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ #(\d+)', message_text, re.IGNORECASE)

    if match:
        order_id = int(match.group(1))
        print(f"[DEBUG orders.py] –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞ #{order_id} –Ω–∞ {new_status_key} –∑–∞–ø—Ä–æ—à–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {callback_query.from_user.id}")
        old_status, new_status_display = await update_order_status_async(order_id, new_status_key)
        if old_status is not None:
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–æ–≤—ã–º —Å—Ç–∞—Ç—É—Å–æ–º
            # –ù—É–∂–Ω–æ –∑–∞–Ω–æ–≤–æ –ø–æ–ª—É—á–∏—Ç—å –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–µ –¥–µ—Ç–∞–ª–∏
            from telegram_manager_bot.utils import get_order_details_async
            details = await get_order_details_async(order_id)
            if details:
                order_info = (
                    f"–ó–∞–∫–∞–∑ #{details['id']}\n"
                    f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {details['user']}\n"
                    f"–°—Ç–∞—Ç—É—Å: {details['status']}\n" # –£–∂–µ –Ω–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å
                    f"–°—Ç–∞—Ç—É—Å –æ–ø–ª–∞—Ç—ã: {details['payment_status']}\n"
                    f"–î–∞—Ç–∞ –¥–æ—Å—Ç–∞–≤–∫–∏: {details['delivery_date']}\n"
                    f"–ê–¥—Ä–µ—Å: {details['delivery_address']}\n"
                    f"–¢–µ–ª–µ—Ñ–æ–Ω: {details['delivery_phone']}\n"
                    f"–ò—Ç–æ–≥–æ: {details['total_price']} ‚ÇΩ\n"
                    f"–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {details['comment'] or '–ù–µ—Ç'}\n"
                    f"–¢–æ–≤–∞—Ä—ã:\n" + "\n".join(details['items_list'])
                )
                from telegram_manager_bot.keyboards import get_order_status_keyboard
                keyboard = get_order_status_keyboard(details['status'].lower())
                await callback_query.message.edit_text(text=order_info, reply_markup=keyboard)
                await callback_query.answer(f"–°—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω—ë–Ω –Ω–∞ {new_status_display}")
            else:
                await callback_query.answer("–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∑–∞–∫–∞–∑–µ.")
        else:
            await callback_query.answer("–ó–∞–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω.")
    else:
        await callback_query.answer("–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å ID –∑–∞–∫–∞–∑–∞.")
    await callback_query.answer()

@router.callback_query(lambda c: c.data == 'm_refresh_orders')
async def callback_refresh_orders(callback_query: types.CallbackQuery):
    """–û–±–Ω–æ–≤–ª—è–µ—Ç —Å–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤."""
    print(f"[DEBUG orders.py] –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∑–∞–∫–∞–∑–æ–≤ –∑–∞–ø—Ä–æ—à–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {callback_query.from_user.id}")
    orders = await get_all_orders_async()
    if orders:
        keyboard = get_orders_list_keyboard(orders)
        await callback_query.message.edit_reply_markup(reply_markup=keyboard)
    else:
        await callback_query.message.edit_text("–ó–∞–∫–∞–∑–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç.")
    await callback_query.answer()