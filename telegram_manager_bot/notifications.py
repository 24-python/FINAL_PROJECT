# telegram_manager_bot/notifications.py
from aiogram import Bot
from aiogram.types import FSInputFile
from django.conf import settings
from django.contrib.auth.models import User
from telegram_manager_bot.utils import get_managers_telegram_ids_sync, get_order_details_sync
from telegram_manager_bot.keyboards import get_order_details_keyboard
import asyncio
from asgiref.sync import sync_to_async
import os

bot = Bot(token=settings.TELEGRAM_MANAGER_BOT_TOKEN)

async def send_new_order_to_managers(order_id):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä–∞–º –æ –Ω–æ–≤–æ–º –∑–∞–∫–∞–∑–µ."""
    print(f"[DEBUG notifications.py] –ù–∞—á–∞–ª–æ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤–æ–º –∑–∞–∫–∞–∑–µ #{order_id}")
    try:
        details = await get_order_details_sync(order_id)
        print(f"[DEBUG notifications.py] –ü–æ–ª—É—á–µ–Ω—ã –¥–µ—Ç–∞–ª–∏ –Ω–æ–≤–æ–≥–æ –∑–∞–∫–∞–∑–∞: {details}")
    except Exception as e:
        print(f"[ERROR notifications.py] –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π –Ω–æ–≤–æ–≥–æ –∑–∞–∫–∞–∑–∞ #{order_id}: {e}")
        return # <-- –í—ã—Ö–æ–¥–∏–º, –µ—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∏–ª–∏ –¥–µ—Ç–∞–ª–∏

    if not details:
        print(f"[DEBUG notifications.py] –î–µ—Ç–∞–ª–∏ –Ω–æ–≤–æ–≥–æ –∑–∞–∫–∞–∑–∞ #{order_id} –ø—É—Å—Ç—ã –∏–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")
        return

    try:
        manager_ids = await get_managers_telegram_ids_sync()
    except Exception as e:
        print(f"[ERROR notifications.py] –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è ID –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤ –¥–ª—è –Ω–æ–≤–æ–≥–æ –∑–∞–∫–∞–∑–∞: {e}")
        return

    if not manager_ids:
        print("–ù–µ—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤–æ–º –∑–∞–∫–∞–∑–µ.")
        return

    # –ü–æ–¥–≥–æ—Ç–æ–≤–∏–º –æ—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–∫—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (caption)
    order_info_caption = (
        f"üö® –ù–û–í–´–ô –ó–ê–ö–ê–ó #{details['id']}\n"
        f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {details['user']}\n"
        f"–°—Ç–∞—Ç—É—Å: {details['status']}\n"
        f"–°—Ç–∞—Ç—É—Å –æ–ø–ª–∞—Ç—ã: {details['payment_status']}\n"
        f"–î–∞—Ç–∞ –¥–æ—Å—Ç–∞–≤–∫–∏: {details['delivery_date']}\n"
        f"–ê–¥—Ä–µ—Å: {details['delivery_address']}\n"
        f"–¢–µ–ª–µ—Ñ–æ–Ω: {details['delivery_phone']}\n"
        f"–ò—Ç–æ–≥–æ: {details['total_price']} ‚ÇΩ\n"
        f"–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {details['comment'] or '–ù–µ—Ç'}\n"
        f"–¢–æ–≤–∞—Ä—ã:\n" + "\n".join(details['items_list'])
    )

    keyboard = get_order_details_keyboard(details['id'])

    for tg_id in manager_ids:
        try:
            image_paths = details['image_paths']
            if image_paths:
                # --- –õ–û–ì–ò–ö–ê: –û—Ç–ø—Ä–∞–≤–∏—Ç—å –ü–ï–†–í–û–ï –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å caption ---
                first_img_path = image_paths[0]
                if os.path.isfile(first_img_path):
                    try:
                        input_file = FSInputFile(first_img_path)
                        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
                        await bot.send_photo(
                            chat_id=tg_id,
                            photo=input_file,
                            caption=order_info_caption,
                            reply_markup=keyboard # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø—Ä–∏–∫—Ä–µ–ø–ª—è–µ—Ç—Å—è –∫ –ø–µ—Ä–≤–æ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é
                        )
                        print(f"[DEBUG notifications.py] –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ {first_img_path} —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –Ω–æ–≤–æ–≥–æ –∑–∞–∫–∞–∑–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –º–µ–Ω–µ–¥–∂–µ—Ä—É {tg_id}")
                        # --- –õ–û–ì–ò–ö–ê: –û—Ç–ø—Ä–∞–≤–∏—Ç—å –û–°–¢–ê–õ–¨–ù–´–ï –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (–µ—Å–ª–∏ –µ—Å—Ç—å) –ë–ï–ó caption ---
                        for img_path in image_paths[1:]:
                            if os.path.isfile(img_path):
                                try:
                                    next_input_file = FSInputFile(img_path)
                                    await bot.send_photo(chat_id=tg_id, photo=next_input_file)
                                    print(f"[DEBUG notifications.py] –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ {img_path} –Ω–æ–≤–æ–≥–æ –∑–∞–∫–∞–∑–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –º–µ–Ω–µ–¥–∂–µ—Ä—É {tg_id}")
                                except Exception as e:
                                    print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è {img_path} –Ω–æ–≤–æ–≥–æ –∑–∞–∫–∞–∑–∞ –º–µ–Ω–µ–¥–∂–µ—Ä—É {tg_id}: {e}")
                            else:
                                print(f"–§–∞–π–ª –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –∑–∞–∫–∞–∑–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω: {img_path}")
                    except Exception as e:
                        print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–µ—Ä–≤–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º {first_img_path} –º–µ–Ω–µ–¥–∂–µ—Ä—É {tg_id}: {e}")
                        # --- –ê–≤–∞—Ä–∏–π–Ω—ã–π fallback: –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ, –æ—Ç–ø—Ä–∞–≤–∏–º —Ç–µ–∫—Å—Ç ---
                        await bot.send_message(chat_id=tg_id, text=order_info_caption, reply_markup=keyboard)
                        print(f"[DEBUG notifications.py] Fallback: –¢–µ–∫—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ (–∏–∑-–∑–∞ –æ—à–∏–±–∫–∏ —Ñ–æ—Ç–æ) –æ –Ω–æ–≤–æ–º –∑–∞–∫–∞–∑–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –º–µ–Ω–µ–¥–∂–µ—Ä—É {tg_id}")
                else:
                    print(f"–§–∞–π–ª –ø–µ—Ä–≤–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –∑–∞–∫–∞–∑–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω: {first_img_path}")
                    # --- –ê–≤–∞—Ä–∏–π–Ω—ã–π fallback: –µ—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω, –æ—Ç–ø—Ä–∞–≤–∏–º —Ç–µ–∫—Å—Ç ---
                    await bot.send_message(chat_id=tg_id, text=order_info_caption, reply_markup=keyboard)
                    print(f"[DEBUG notifications.py] Fallback: –¢–µ–∫—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ (–∏–∑-–∑–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è —Ñ–æ—Ç–æ) –æ –Ω–æ–≤–æ–º –∑–∞–∫–∞–∑–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –º–µ–Ω–µ–¥–∂–µ—Ä—É {tg_id}")
            else:
                # –ï—Å–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –Ω–µ—Ç, –æ—Ç–ø—Ä–∞–≤–∏–º –ø—Ä–æ—Å—Ç–æ —Ç–µ–∫—Å—Ç
                await bot.send_message(chat_id=tg_id, text=order_info_caption, reply_markup=keyboard)
                print(f"[DEBUG notifications.py] –¢–µ–∫—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ (–±–µ–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π) –æ –Ω–æ–≤–æ–º –∑–∞–∫–∞–∑–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –º–µ–Ω–µ–¥–∂–µ—Ä—É {tg_id}")

        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤–æ–º –∑–∞–∫–∞–∑–µ –º–µ–Ω–µ–¥–∂–µ—Ä—É {tg_id}: {e}")


# --- –ù–û–í–ê–Ø –§–£–ù–ö–¶–ò–Ø: –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ ---
async def send_order_status_update_to_managers(order_id, old_status, new_status, user_id):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä–∞–º –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞.
    """
    print(f"[DEBUG notifications.py] –ù–∞—á–∞–ª–æ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞ #{order_id}")
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –µ–≥–æ ID
        user = await sync_to_async(User.objects.get)(id=user_id)
        username = user.username
        print(f"[DEBUG notifications.py] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–∫–∞–∑–∞: {username}")
    except User.DoesNotExist:
        username = f"ID:{user_id}"
        print(f"[DEBUG notifications.py] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {user_id} –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º ID.")
    except Exception as e:
        username = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
        print(f"[ERROR notifications.py] –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {e}")

    try:
        manager_ids = await get_managers_telegram_ids_sync()
    except Exception as e:
        print(f"[ERROR notifications.py] –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è ID –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å–º–µ–Ω–µ —Å—Ç–∞—Ç—É—Å–∞: {e}")
        return

    if not manager_ids:
        print("–ù–µ—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å–º–µ–Ω–µ —Å—Ç–∞—Ç—É—Å–∞.")
        return

    message_text = (
        f"üîÑ –°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ #{order_id} –∏–∑–º–µ–Ω—ë–Ω!\n"
        f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {username}\n"
        f"–°—Ç–∞—Ä—ã–π —Å—Ç–∞—Ç—É—Å: {old_status}\n"
        f"–ù–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å: {new_status}\n"
    )

    for tg_id in manager_ids:
        try:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            await bot.send_message(chat_id=tg_id, text=message_text)
            print(f"[DEBUG notifications.py] –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞ #{order_id} —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –º–µ–Ω–µ–¥–∂–µ—Ä—É {tg_id}")
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞ #{order_id} –º–µ–Ω–µ–¥–∂–µ—Ä—É {tg_id}: {e}")

# --- /–ù–û–í–ê–Ø –§–£–ù–ö–¶–ò–Ø: –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ ---


# --- –§–£–ù–ö–¶–ò–Ø –î–õ–Ø –ó–ê–ü–£–°–ö–ê –ö–û–£–¢–ò–ù –ò–ó –°–ò–ù–•–†–û–ù–ù–û–ì–û –ö–û–î–ê ---
def run_async_notification(coro):
    try:
        loop = asyncio.get_event_loop()
    except RuntimeError:
        loop = asyncio.new_event_loop()
        asyncio.set_event_loop(loop)
    try:
        loop.run_until_complete(coro)
    except Exception as e:
        print(f"[ERROR run_async_notification] –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ—Ä—É—Ç–∏–Ω—ã: {e}")
# --- /–§–£–ù–ö–¶–ò–Ø –î–õ–Ø –ó–ê–ü–£–°–ö–ê –ö–û–£–¢–ò–ù –ò–ó –°–ò–ù–•–†–û–ù–ù–û–ì–û –ö–û–î–ê ---
