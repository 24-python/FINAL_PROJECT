# telegram_manager_bot/notifications.py
from aiogram import Bot
from django.conf import settings
from telegram_manager_bot.utils import get_managers_telegram_ids_sync, get_order_details_sync
from telegram_manager_bot.keyboards import get_order_details_keyboard
import asyncio
from asgiref.sync import sync_to_async

bot = Bot(token=settings.TELEGRAM_MANAGER_BOT_TOKEN)

async def send_new_order_to_managers(order_id):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä–∞–º –æ –Ω–æ–≤–æ–º –∑–∞–∫–∞–∑–µ."""
    details = await get_order_details_sync(order_id)
    if not details:
        print(f"–ó–∞–∫–∞–∑ —Å ID {order_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è.")
        return

    manager_ids = await get_managers_telegram_ids_sync()
    if not manager_ids:
        print("–ù–µ—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è.")
        return

    order_info = (
        f"üö® –ù–û–í–´–ô –ó–ê–ö–ê–ó #{details['id']}\n"
        f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {details['user']}\n"
        f"–°—Ç–∞—Ç—É—Å: {details['status']}\n"
        f"–°—Ç–∞—Ç—É—Å –æ–ø–ª–∞—Ç—ã: {details['payment_status']}\n"
        f"–î–∞—Ç–∞ –¥–æ—Å—Ç–∞–≤–∫–∏: {details['delivery_date']}\n"
        f"–ê–¥—Ä–µ—Å: {details['delivery_address']}\n"
        f"–¢–µ–ª–µ—Ñ–æ–Ω: {details['delivery_phone']}\n"
        f"–ò—Ç–æ–≥–æ: {details['total_price']} ‚ÇΩ\n"
        f"–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {details['comment'] or '–ù–µ—Ç'}\n"
        f"–¢–æ–≤–∞—Ä—ã:\n" + "\n".join(details['items_list'])
    )

    keyboard = get_order_details_keyboard(details['id'])

    for tg_id in manager_ids:
        try:
            for img_path in details['image_paths']:
                try:
                    with open(img_path, 'rb') as image_file:
                        await bot.send_photo(chat_id=tg_id, photo=image_file)
                except Exception as e:
                    print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è {img_path} –º–µ–Ω–µ–¥–∂–µ—Ä—É {tg_id}: {e}")
            await bot.send_message(chat_id=tg_id, text=order_info, reply_markup=keyboard)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä—É {tg_id}: {e}")

def run_async_notification(coro):
    try:
        loop = asyncio.get_event_loop()
    except RuntimeError:
        loop = asyncio.new_event_loop()
        asyncio.set_event_loop(loop)
    loop.run_until_complete(coro)